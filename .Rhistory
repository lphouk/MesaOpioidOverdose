"Young Adult",
"Middle-aged Adult",
"Elderly"),
labels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"))
df2$day <- factor(df2$day,
levels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"),
labels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
df2$timeOfDay <- factor(df2$timeOfDay,
levels=c("Morning",
"Afternoon",
"Evening",
"Overnight"),
labels=c("Morning",
"Afternoon",
"Evening",
"Overnight"))
label(df2$gender) <- "Sex"
label(df2$mergedAgeGroup) <- "Age Group"
label(df2$day) <- "Day of the Week"
label(df2$timeOfDay) <- "Time of Day"
label(df2$naloxone) <- "Administered Naloxone"
tab1 <- table1(~ gender + mergedAgeGroup + day + timeOfDay + naloxone | fatal, data=df2, caption="Baseline Characteristics")
tab1
df <- df2
df <- df %>%
filter(mergedAgeGroup != "Teen")
# Logistic Regression Model
fit <- glm(fatal ~ gender + naloxone + weekend + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)', 'Male','Naloxone','Weekend','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit))
coefSE <- unname((summary(fit)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
tab2 <- kable_classic_2(kable(
coefTable,
col.names = c("Coefficient", "Estimate", "Standard Error", "95% CI", "P-Value"),
digits = 3,
caption = "Logistic Regression Estimates of Odds Ratios for Fatal Opioid Overdose",
format = "latex",
booktabs = TRUE
), full_width = F, html_font = "Cambria")
tab2
predictedData <- data.frame(
probOfFatal=fit$fitted.values,
fatal=df$fatal)
predictedData <- predictedData[
order(predictedData$probOfFatal, decreasing=FALSE),]
predictedData$rank <- 1:nrow(predictedData)
fig1 <- ggplot(data=predictedData, aes(x=rank, y=probOfFatal)) +
geom_point(aes(color=factor(fatal))) +
xlab("Index") +
ylab("Probability") + labs(color = "True Outcome") + ggtitle("Predicted Probabilities of a Fatal Overdose") +
scale_color_manual(values = c("blue", "red"),
labels = c("Not Fatal", "Fatal"))
fig1
countsGenderFatal <- table(df$gender, df$fatal)
countsGenderFatal
#chisq.test(countsGenderFatal)
countsGenderFatal <- table(df$gender, df$fatal)
chisq.test(countsGenderFatal)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
library(kableExtra)
library(table1)
library(gridExtra)
rawData <- read.csv('EMSIncidents.csv')
df <- read.csv('newData.csv')
df2 <- df
df2$fatal <- factor(df2$fatal, levels=c(1,0),
labels=c("Fatal",
"Non-Fatal"))
df2$gender <- factor(df2$gender, levels=c('Male', 'Female'),
labels=c("Male",
"Female"))
df2$naloxone <- factor(df2$naloxone, levels=c(1,0),
labels=c("True",
"False"))
df2$pdNarcan <- factor(df2$pdNarcan, levels=c(1,0),
labels=c("True",
"False"))
df2$mergedAgeGroup <- factor(df2$mergedAgeGroup,
levels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"),
labels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"))
df2$day <- factor(df2$day,
levels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"),
labels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
df2$timeOfDay <- factor(df2$timeOfDay,
levels=c("Morning",
"Afternoon",
"Evening",
"Overnight"),
labels=c("Morning",
"Afternoon",
"Evening",
"Overnight"))
label(df2$gender) <- "Sex"
label(df2$mergedAgeGroup) <- "Age Group"
label(df2$day) <- "Day of the Week"
label(df2$timeOfDay) <- "Time of Day"
label(df2$naloxone) <- "Administered Naloxone"
tab1 <- table1(~ gender + mergedAgeGroup + day + timeOfDay + naloxone | fatal, data=df2, caption="Baseline Characteristics")
tab1
countsGenderFatal <- table(df$gender, df$fatal)
chisq.test(countsGenderFatal)
df <- df2
df <- df %>%
filter(mergedAgeGroup != "Teen")
# Logistic Regression Model
fit <- glm(fatal ~ gender + naloxone + weekend + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)', 'Male','Naloxone','Weekend','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit))
coefSE <- unname((summary(fit)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
tab2 <- kable_classic_2(kable(
coefTable,
col.names = c("Coefficient", "Estimate", "Standard Error", "95% CI", "P-Value"),
digits = 3,
caption = "Logistic Regression Estimates of Odds Ratios for Fatal Opioid Overdose",
format = "latex",
booktabs = TRUE
), full_width = F, html_font = "Cambria")
tab2
predictedData <- data.frame(
probOfFatal=fit$fitted.values,
fatal=df$fatal)
predictedData <- predictedData[
order(predictedData$probOfFatal, decreasing=FALSE),]
predictedData$rank <- 1:nrow(predictedData)
fig1 <- ggplot(data=predictedData, aes(x=rank, y=probOfFatal)) +
geom_point(aes(color=factor(fatal))) +
xlab("Index") +
ylab("Probability") + labs(color = "True Outcome") + ggtitle("Predicted Probabilities of a Fatal Overdose") +
scale_color_manual(values = c("blue", "red"),
labels = c("Not Fatal", "Fatal"))
fig1
# Calculate Counts
fatalCount <- table(df$gender, df$fatal)
# Calculate Proportions
fatalProp <- prop.table(fatalCount, margin = 1)
FatalPropDf <- as.data.frame(fatalProp)
# Create a bar plot
ggplot(FatalPropDf, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("blue", "red"), name = "Death") +
ggtitle("Proportion of Fatalities by Gender") +
labs(x = "Gender", y = "Proportion of Fatalities")
# Calculate Counts
fatalCount <- table(df$gender, df$fatal)
# Calculate Proportions
fatalProp <- prop.table(fatalCount, margin = 1)
FatalPropDf <- as.data.frame(fatalProp)
# Create a bar plot
ggplot(FatalPropDf, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("red", "blue"), name = "Death") +
ggtitle("Proportion of Fatalities by Gender") +
labs(x = "Gender", y = "Proportion of Fatalities")
# Calculate Counts
fatalCount <- table(df$gender, df$fatal)
# Calculate Proportions
fatalProp <- prop.table(fatalCount, margin = 1)
FatalPropDf <- as.data.frame(fatalProp)
# Create a bar plot
ggplot(FatalPropDf, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#00BFC4", "#F8766D"), name = "Death") +
ggtitle("Proportion of Fatalities by Gender") +
labs(x = "Gender", y = "Proportion of Fatalities")
# Calculate Counts
fatalCount <- table(df$gender, df$fatal)
# Calculate Proportions
fatalProp <- prop.table(fatalCount, margin = 1)
FatalPropDf <- as.data.frame(fatalProp)
# Create a bar plot
ggplot(FatalPropDf, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#00BFC4", "#F8766D"), name = "Death") +
ggtitle("Proportion of Fatalities by Sex") +
labs(x = "Sex", y = "Proportion of Fatalities")
# Logistic Regression Model
fit.red <- glm(fatal ~  naloxone + mergedAgeGroup + timeOfDay, data = df, family = binomial)
# Reduced Regression Model
fit.red <- glm(fatal ~  naloxone + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)', 'Male','Naloxone','Weekend','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit.red))
coefSE <- unname((summary(fit.red)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit.red)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit.red)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
library(kableExtra)
library(table1)
library(gridExtra)
rawData <- read.csv('EMSIncidents.csv')
df <- read.csv('newData.csv')
df2 <- df
df2$fatal <- factor(df2$fatal, levels=c(1,0),
labels=c("Fatal",
"Non-Fatal"))
df2$gender <- factor(df2$gender, levels=c('Male', 'Female'),
labels=c("Male",
"Female"))
df2$naloxone <- factor(df2$naloxone, levels=c(1,0),
labels=c("True",
"False"))
df2$pdNarcan <- factor(df2$pdNarcan, levels=c(1,0),
labels=c("True",
"False"))
df2$mergedAgeGroup <- factor(df2$mergedAgeGroup,
levels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"),
labels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"))
df2$day <- factor(df2$day,
levels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"),
labels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
df2$timeOfDay <- factor(df2$timeOfDay,
levels=c("Morning",
"Afternoon",
"Evening",
"Overnight"),
labels=c("Morning",
"Afternoon",
"Evening",
"Overnight"))
label(df2$gender) <- "Sex"
label(df2$mergedAgeGroup) <- "Age Group"
label(df2$day) <- "Day of the Week"
label(df2$timeOfDay) <- "Time of Day"
label(df2$naloxone) <- "Administered Naloxone"
tab1 <- table1(~ gender + mergedAgeGroup + day + timeOfDay + naloxone | fatal, data=df2, caption="Baseline Characteristics")
tab1
# Calculate Counts
fatalCount <- table(df$gender, df$fatal)
# Calculate Proportions
fatalProp <- prop.table(fatalCount, margin = 1)
FatalPropDf <- as.data.frame(fatalProp)
# Create a bar plot
ggplot(FatalPropDf, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#00BFC4", "#F8766D"), name = "Death") +
ggtitle("Proportion of Fatalities by Sex") +
labs(x = "Sex", y = "Proportion of Fatalities")
countsGenderFatal <- table(df$gender, df$fatal)
chisq.test(countsGenderFatal)
df <- df2
df <- df %>%
filter(mergedAgeGroup != "Teen")
# Logistic Regression Model
fit <- glm(fatal ~ gender + naloxone + weekend + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)', 'Male','Naloxone','Weekend','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit))
coefSE <- unname((summary(fit)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
tab2 <- kable_classic_2(kable(
coefTable,
col.names = c("Coefficient", "Estimate", "Standard Error", "95% CI", "P-Value"),
digits = 3,
caption = "Logistic Regression Estimates of Odds Ratios for Fatal Opioid Overdose",
format = "latex",
booktabs = TRUE
), full_width = F, html_font = "Cambria")
tab2
# Reduced Regression Model
fit.red <- glm(fatal ~  naloxone + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)', 'Male','Naloxone','Weekend','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit.red))
coefSE <- unname((summary(fit.red)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit.red)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit.red)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
# Reduced Regression Model
fit.red <- glm(fatal ~  naloxone + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)','Naloxone','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit.red))
coefSE <- unname((summary(fit.red)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit.red)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit.red)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
tab3 <- kable_classic_2(kable(
coefTable,
col.names = c("Coefficient", "Estimate", "Standard Error", "95% CI", "P-Value"),
digits = 3,
caption = "Reduced Logistic Regression Estimates of Odds Ratios for Fatal Opioid Overdose",
format = "latex",
booktabs = TRUE
), full_width = F, html_font = "Cambria")
tab3
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(knitr)
library(kableExtra)
library(table1)
library(gridExtra)
rawData <- read.csv('EMSIncidents.csv')
df <- read.csv('newData.csv')
df2 <- df
df2$fatal <- factor(df2$fatal, levels=c(1,0),
labels=c("Fatal",
"Non-Fatal"))
df2$gender <- factor(df2$gender, levels=c('Male', 'Female'),
labels=c("Male",
"Female"))
df2$naloxone <- factor(df2$naloxone, levels=c(1,0),
labels=c("True",
"False"))
df2$pdNarcan <- factor(df2$pdNarcan, levels=c(1,0),
labels=c("True",
"False"))
df2$mergedAgeGroup <- factor(df2$mergedAgeGroup,
levels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"),
labels=c("Teen",
"Young Adult",
"Middle-aged Adult",
"Elderly"))
df2$day <- factor(df2$day,
levels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"),
labels=c("Monday",
"Tuesday",
"Wednesday",
"Thursday",
"Friday",
"Saturday",
"Sunday"))
df2$timeOfDay <- factor(df2$timeOfDay,
levels=c("Morning",
"Afternoon",
"Evening",
"Overnight"),
labels=c("Morning",
"Afternoon",
"Evening",
"Overnight"))
label(df2$gender) <- "Sex"
label(df2$mergedAgeGroup) <- "Age Group"
label(df2$day) <- "Day of the Week"
label(df2$timeOfDay) <- "Time of Day"
label(df2$naloxone) <- "Administered Naloxone"
tab1 <- table1(~ gender + mergedAgeGroup + day + timeOfDay + naloxone | fatal, data=df2, caption="Baseline Characteristics")
tab1
# Calculate Counts
fatalCount <- table(df$gender, df$fatal)
# Calculate Proportions
fatalProp <- prop.table(fatalCount, margin = 1)
FatalPropDf <- as.data.frame(fatalProp)
# Create a bar plot
ggplot(FatalPropDf, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = c("#00BFC4", "#F8766D"), name = "Death") +
ggtitle("Proportion of Fatalities by Sex") +
labs(x = "Sex", y = "Proportion of Fatalities")
countsGenderFatal <- table(df$gender, df$fatal)
chisq.test(countsGenderFatal)
df <- df2
df <- df %>%
filter(mergedAgeGroup != "Teen")
# Logistic Regression Model
fit <- glm(fatal ~ gender + naloxone + weekend + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)', 'Male','Naloxone','Weekend','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit))
coefSE <- unname((summary(fit)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
tab2 <- kable_classic_2(kable(
coefTable,
col.names = c("Coefficient", "Estimate", "Standard Error", "95% CI", "P-Value"),
digits = 3,
caption = "Logistic Regression Estimates of Odds Ratios for Fatal Opioid Overdose",
format = "latex",
booktabs = TRUE
), full_width = F, html_font = "Cambria")
tab2
# Reduced Regression Model
fit.red <- glm(fatal ~  naloxone + mergedAgeGroup + timeOfDay, data = df, family = binomial)
coefNames <- c('(Intercept)','Naloxone','Middle-Aged Adult','Young Adult', 'Evening', 'Morning', 'Overnight')
coefEstimates <- unname(coef(fit.red))
coefSE <- unname((summary(fit.red)$coef[, "Std. Error"]))
# Get the confidence intervals for the coefficients
confInt <- confint(fit.red)
# Extract the lower and upper bounds of the confidence intervals
lower <- confInt[,1]
upper <- confInt[,2]
CI <- sprintf("(%0.3f-%0.3f)", lower, upper)
coefPVal <- unname(summary(fit.red)$coef[, 4])
coefTable <- data.frame(coefNames, coefEstimates, coefSE, CI, coefPVal)
tab3 <- kable_classic_2(kable(
coefTable,
col.names = c("Coefficient", "Estimate", "Standard Error", "95% CI", "P-Value"),
digits = 3,
caption = "Reduced Logistic Regression Estimates of Odds Ratios for Fatal Opioid Overdose",
format = "latex",
booktabs = TRUE
), full_width = F, html_font = "Cambria")
tab3
predictedData <- data.frame(
probOfFatal=fit$fitted.values,
fatal=df$fatal)
predictedData <- predictedData[
order(predictedData$probOfFatal, decreasing=FALSE),]
predictedData$rank <- 1:nrow(predictedData)
fig1 <- ggplot(data=predictedData, aes(x=rank, y=probOfFatal)) +
geom_point(aes(color=factor(fatal))) +
xlab("Index") +
ylab("Probability") + labs(color = "True Outcome") + ggtitle("Predicted Probabilities of a Fatal Overdose") +
scale_color_manual(values = c("blue", "red"),
labels = c("Not Fatal", "Fatal"))
fig1
